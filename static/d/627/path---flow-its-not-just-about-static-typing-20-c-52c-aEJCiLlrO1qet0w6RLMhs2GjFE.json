{"data":{"site":{"siteMetadata":{"title":"TrakBit","author":"Harsh Vardhan"}},"markdownRemark":{"id":"296b4a18-51c4-5ab5-99cd-3f08d60cb5a1","excerpt":"It Helps Others Understand Your Code The ability to simply hover over states and know the structure of the state improves maintainability…","html":"<h2>It Helps Others Understand Your Code</h2>\n<p>The ability to simply hover over states and know the structure of the state improves maintainability and readability.</p>\n<h2>It Prevents You From Creating Overly Generic Functions</h2>\n<p>Developers at time can be prone to <strong>over engineering</strong> which can mean creating abstraction by bringing over complex reusability.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">saveData</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">,</span> property<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>property <span class=\"token operator\">===</span> <span class=\"token string\">'name'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">saveName</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>property <span class=\"token operator\">===</span> <span class=\"token string\">'age'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">saveAge</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">saveData</span><span class=\"token punctuation\">(</span><span class=\"token string\">'John'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Here a generic function saveData() has been created where its accepting property of type name and age accompanied with the data.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">saveData</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">:</span> number<span class=\"token punctuation\">,</span> property<span class=\"token punctuation\">:</span> string<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>property <span class=\"token operator\">===</span> <span class=\"token string\">'name'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">\t\t<span class=\"token function\">saveName</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></span>\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>property <span class=\"token operator\">===</span> <span class=\"token string\">'age'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">\t\t<span class=\"token function\">saveAge</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></span>\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">saveData</span><span class=\"token punctuation\">(</span><span class=\"token string\">'John'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//String is incompatible with type number --</span></code></pre></div>\n<p>But now if I have to statically type this over — engineering is no more possible. Variable data can either be only of <strong>type number for saveAge()</strong> or only of <strong>type string for saveName()</strong>.</p>","timeToRead":1,"frontmatter":{"title":"Flow: It’s Not Just About Static Typing","date":"June 11, 2018"}}},"pageContext":{"slug":"/Flow - It’s Not Just About Static Typing/","previous":null,"next":{"fields":{"slug":"/Reselect with Redux: A Use Case/"},"frontmatter":{"title":""}}}}