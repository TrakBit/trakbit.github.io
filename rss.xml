<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[TrakBit]]></title><description><![CDATA[Delivering value with Knowledge]]></description><link>https://trakbit.com</link><generator>RSS for Node</generator><lastBuildDate>Tue, 11 Dec 2018 15:59:55 GMT</lastBuildDate><item><title><![CDATA[Reselect with Redux: A Use Case]]></title><description><![CDATA[Reselect is a simple yet effective library in a sense it can cut down on computational and network intensive tasks. In case of Redux it can…]]></description><link>https://trakbit.com/Reselect with Redux: A Use Case/</link><guid isPermaLink="false">https://trakbit.com/Reselect with Redux: A Use Case/</guid><pubDate>Sun, 02 Dec 2018 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Reselect is a simple yet effective library in a sense it can cut down on computational and network intensive tasks. In case of Redux it can help achieve a derived value from existing reducers instead of creating a new reducer for holding a derived value or fetching it from server.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/TrakBit/Images/master/selector.png&quot; alt=&quot;Reselect&quot;&gt;&lt;/p&gt;
&lt;h2&gt;Use Case: Search Deals in Redux Store&lt;/h2&gt;
&lt;p&gt;In the use case the user should be able to search the deals by the keywords he enters.&lt;/p&gt;
&lt;h3&gt;Possibility 1 : Query Server ❌&lt;/h3&gt;
&lt;p&gt;Initially I planned to query the server but that means making a request to the server on every keystroke and refreshing the redux store but it can be inefficient in terms of network.&lt;/p&gt;
&lt;h3&gt;Possibility 2 : Create Another Reducer ❌&lt;/h3&gt;
&lt;p&gt;Creating another reducer which holds the searched deals that but meant over complicating the redux store.&lt;/p&gt;
&lt;h3&gt;Possibility 3: Reselect ✅&lt;/h3&gt;
&lt;p&gt;There was reducer which hold the keywords that has been searched and another reducer holding all the deals. Therefore now what was needed was a derived value from the two reducers.&lt;/p&gt;
&lt;h3&gt;Implementation&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/TrakBit/Images/master/reselectUseCase.png&quot; alt=&quot;ReselectUse&quot;&gt;
By creating a function filterDeal and wrapping it around it dealsReducer in MapStateToProps allowed us to get derived value. Note how the entire state has been passed in filterDeal() so that it can have access to both dealReducer and dealSearchReducer.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Flow: It’s Not Just About Static Typing]]></title><description><![CDATA[It Helps Others Understand Your Code 
The ability to simply hover over states and know the structure of the state improves maintainability…]]></description><link>https://trakbit.com/Flow - It’s Not Just About Static Typing/</link><guid isPermaLink="false">https://trakbit.com/Flow - It’s Not Just About Static Typing/</guid><pubDate>Mon, 11 Jun 2018 00:00:00 GMT</pubDate><content:encoded>&lt;h2&gt;It Helps Others Understand Your Code&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/TrakBit/Images/master/flow-hover.jpeg&quot; alt=&quot;hover&quot;&gt;
The ability to simply hover over states and know the structure of the state improves maintainability and readability.&lt;/p&gt;
&lt;h2&gt;It Prevents You From Creating Overly Generic Functions&lt;/h2&gt;
&lt;p&gt;Developers at time can be prone to &lt;strong&gt;over engineering&lt;/strong&gt; which can mean creating abstraction by bringing over complex reusability.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;saveData&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;data&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; property&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;property &lt;span class=&quot;token operator&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;name&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;token function&quot;&gt;saveName&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;data&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;property &lt;span class=&quot;token operator&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;age&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;token function&quot;&gt;saveAge&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;data&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;saveData&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;John&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;name&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here a generic function saveData() has been created where its accepting property of type name and age accompanied with the data.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;saveData&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;data&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; number&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; property&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; string&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;property &lt;span class=&quot;token operator&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;name&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;		&lt;span class=&quot;token function&quot;&gt;saveName&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;data&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt;	&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;property &lt;span class=&quot;token operator&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;age&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;		&lt;span class=&quot;token function&quot;&gt;saveAge&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;data&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt;	&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;saveData&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;John&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;name&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;//String is incompatible with type number --&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;But now if I have to statically type this over — engineering is no more possible. Variable data can either be only of &lt;strong&gt;type number for saveAge()&lt;/strong&gt; or only of &lt;strong&gt;type string for saveName()&lt;/strong&gt;.&lt;/p&gt;</content:encoded></item></channel></rss>